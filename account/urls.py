from django.urls import path
from django.contrib.auth import views as auth_views
from django.utils.translation import ugettext_lazy as _
from django.urls import reverse_lazy

from . import autocomplete, views

urlpatterns = [
    # Autocomplete
    path(
        _('groups/autocomplete/'),
        autocomplete.GroupAutocomplete.as_view(),
        name='group_autocomplete'
    ),
    path(
        _('permissions/autocomplete/'),
        autocomplete.PermissionAutocomplete.as_view(),
        name='permission_autocomplete'
    ),
    path(
        _('users/autocomplete/'),
        autocomplete.UserAutocomplete.as_view(),
        name='user_autocomplete'
    ),
    path(
        _('users/other/autocomplete/'),
        autocomplete.UserOtherAutocomplete.as_view(),
        name='user_other_autocomplete'
    ),
    # Views
    path(
        '',
        views.ProfileDetail.as_view(),
        name='profile_detail'
    ),
    path(
        _('password/'),
        views.ProfilePassword.as_view(),
    ),
    path(
        _('change/'),
        views.ProfileUpdate.as_view(),
        name='profile_update'
    ),
    path(
        _('activate/<token>/'),
        views.Activate.as_view(),
        name='activate'
    ),
    path(
        _('login/'),
        auth_views.LoginView.as_view(
            template_name='registration/login.html'
        ),
        name='login'
    ),
    path(
        _('login/facebook/'),
        views.LoginFacebookView.as_view(),
        name='login_facebook'
    ),
    path(
        _('logout/'),
        auth_views.LogoutView.as_view(),
        name='logout'
    ),
    path(
        _('logout/facebook/'),
        views.LogoutFacebookView.as_view(),
        name='logout_facebook'
    ),
    path(
        _('notifications/read/all/'),
        views.NotificationReadAll.as_view(),
        name='notification_read_all'
    ),
    path(
        _('notifications/<int:pk>/'),
        views.NotificationDetail.as_view(),
        name='notification_detail'
    ),
    path(
        _('password-change/'),
        auth_views.PasswordChangeView.as_view(
            template_name='registration/password_change.html',
            success_url=reverse_lazy('account:password_change_done')
        ),
        name='password_change'
    ),
    path(
        _('password-change/done/'),
        auth_views.PasswordChangeDoneView.as_view(
            template_name='registration/password_done.html'
        ),
        name='password_change_done'
    ),
    path(
        _('password-reset/'),
        auth_views.PasswordResetView.as_view(
            template_name='registration/reset_form.html',
            email_template_name='registration/password_email.html',
            html_email_template_name='registration/password_email_html.html',
            success_url=reverse_lazy('account:password_reset_done'),
            subject_template_name='registration/password_subject.txt',
        ),
        name='password_reset'
    ),
    path(
        _('password-reset/done/'),
        auth_views.PasswordResetDoneView.as_view(
            template_name='registration/reset_done.html'
        ),
        name='password_reset_done'
    ),
    path(
        _('reset/<uidb64>/<token>/'),
        auth_views.PasswordResetConfirmView.as_view(
            template_name='registration/reset_confirm.html',
            success_url=reverse_lazy('account:password_reset_complete')
        ),
        name='password_reset_confirm'
    ),
    path(
        _('reset/done/'),
        auth_views.PasswordResetCompleteView.as_view(
            template_name='registration/reset_complete.html'
        ),
        name='password_reset_complete'
    ),
    path(
        _('signup/'),
        views.SignUp.as_view(),
        name='signup'
    ),
    path(
        _('signup/invite/<int:pk>/<token>/'),
        views.SignUpInvite.as_view(),
        name='signup_invite'
    ),
]
